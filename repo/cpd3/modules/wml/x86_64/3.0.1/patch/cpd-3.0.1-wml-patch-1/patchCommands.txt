patch cm wmltrainingconfigmap -p '{"data": {"trainingService.conf": "akka {\n  loggers = [\"akka.event.Logging$DefaultLogger\"]\n  loglevel = \"WARNING\"\n  logging-filter = \"akka.event.slf4j.Slf4jLoggingFilter\"\n  http {\n    server {\n      max-connections = 1024\n      idle-timeout = 130s\n      request-timeout = 200s\n    }\n  }\n}\nstructured-logging {\n  json-format = false\n  pretty-print = false\n  component-name = \"wml-training\"\n}\nservice {\n      rmq-icd=false\n      redis-icd=false\n      wml-training-data-pvc = \"wml-training-data\"\n      validateTokenService.ml.pubkey.path = \"/opt/ibm/training/keys/mltoken.pub\"\n      validateTokenService.icp.pubkey.path = \"/user-home/public.pem\"\n      enable-ssl = true\n      enable-queue = false\n      runtimes = [\"scala-spark-2.1\", \"scala-spark-2.3\"]\n      request.timeout.seconds = 115\n      threadpool.size = 150\n      training-job {\n        image = \"{{.DockerRegistryPrefix}}/wmltrainingservicehydra\"\n        default.version = \"v.0.1.2681.0.6\"\n        mem = \"512Mi\"\n        cpu = 1.0\n        training-affinity = \"wml\"\n      }\n      http {\n        port = 13300\n      }\n  \n      security {\n        key-store = \"/opt/ibm/training/keys/keystore.jks\"\n        key-store-type = \"JKS\"\n      }\n      repository {\n        url = \"https://internal-nginx-svc:12443\"\n        retries = 2\n        retry-interval = 10s\n      }\n      cloudant {\n        db-name = \"d21sLXRyYWluaW5n\"\n        port = 6984\n        cleanup.interval.hours = 24\n        cleanup.older.days = 14\n        cleanup.delay.ms = 500\n      }\n      spark {\n      timeout = 300\n      version = 2\n      retry = 2\n      hummingbird {\n          host = \"internal-nginx-svc\"\n          port = 12443\n          application_jar_location = \"/opt/ibm/third-party/libs/spark2/spark_pipeline_job.jar\"\n          default_template = \"spark-2.4.0-wml-template\"\n          default_engine_type = \"spark\"\n          default_hw_spec {\n            num_executors = 2\n            cpu = \"1\"\n            mem = \"1g\"\n          }\n      }\n    }\n      api-docs {\n        url = \"http://watson-ml-api.mybluemix.net/\"\n      }\n      wmla {\n        use_proxy = false\n        proxy_host = \"9.21.55.13\"\n        proxy_port = 30123\n        use_url_metrics=true\n      }\n      rabbitmq {\n        subscriber.timeout.seconds = 60\n        exchange = \"training-prod\"\n        queue_expiration_hours = 24\n        threadpool.size = 100\n      }\n      compute {\n        tshirt_sizes {\n          xs.cpu = \"1\"\n          xs.mem = \"4Gi\"\n          s.cpu = \"2\"\n          s.mem = \"8Gi\"\n          m.cpu = \"4\"\n          m.mem = \"16Gi\"\n          l.cpu = \"8\"\n          l.mem = \"32Gi\"\n          xl.cpu = \"16\"\n          xl.mem = \"64Gi\"\n        }\n      }\n      auto_ai.kb {\n        image = \"{{.DockerRegistryPrefix}}/wml-autoai-kb\"\n        default.version = \"v.0.1.413.0.9\"\n        port = 5449\n        retries = 2\n        retry-interval = 60s\n      }\n      federated-learning {\n        image = \"{{.DockerRegistryPrefix}}/federated-learning\"\n        default.version = \"1.1.29\"\n        host = \"$host\"\n        cluster-port = 50443\n        pod-port = 13301\n        del_on_close = true\n      }\n      activeDeadlineSeconds = 604800\n    \n      kube-config {\n        encrypted-certificate-authority = \"/opt/ibm/wml-training/encrypted/ca.pem\"\n        encrypted-client-certificate = \"/opt/ibm/wml-training/encrypted/admin.pem\"\n        encrypted-client-key = \"/opt/ibm/wml-training/encrypted/admin-key.pem\"\n        yaml = \"/opt/ibm/wml-training/kube-config.yml\"\n      }\n     training-affinity = \"wml\"\n      job.coordinator=\"remote\"\n    }\n"},"name": "wmltrainingconfigmap"}'
