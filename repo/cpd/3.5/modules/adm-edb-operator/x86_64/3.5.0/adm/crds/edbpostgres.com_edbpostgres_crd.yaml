
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.3.0
  creationTimestamp: null
  name: edbpostgres.edbpostgres.com
spec:
  group: edbpostgres.com
  names:
    kind: EDBPostgres
    listKind: EDBPostgresList
    plural: edbpostgres
    singular: edbpostgres
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: EDBPostgres is the Schema for the the EDBPostgres Database API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        operatorAction:
          properties:
            action:
              description: 'This allows the CR to perform an action on the cluster
                Valid Values are "Update" Updates the running cluster spec with the
                data provided in the CR "Upgrade" Start a rolling upgrade of the cluste
                with the latest image provided in the CR, "Failover" Force a failover
                to the most approriate standby "PromoteDB" Force a failover to the
                DB node name provided in the actionParameter dbToPromote Default value:
                N/A'
              type: string
            actionParameters:
              additionalProperties:
                type: string
              description: 'This allows a user to set the parameters that will be
                used by the action Default value: N/A'
              type: object
            internalAction:
              type: string
          type: object
        spec:
          description: EDBPostgresSpec defines the desired state of Database
          properties:
            affinity:
              description: 'An array of NodeSelectorRequirements to provide node affinty.
                Each item has 3 strings: key, operator, []values. Default value: N/A'
              items:
                description: A node selector requirement is a selector that contains
                  values, a key, and an operator that relates the key and values.
                properties:
                  key:
                    description: The label key that the selector applies to.
                    type: string
                  operator:
                    description: Represents a key's relationship to a set of values.
                      Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and
                      Lt.
                    type: string
                  values:
                    description: An array of string values. If the operator is In
                      or NotIn, the values array must be non-empty. If the operator
                      is Exists or DoesNotExist, the values array must be empty. If
                      the operator is Gt or Lt, the values array must have a single
                      element, which will be interpreted as an integer. This array
                      is replaced during a strategic merge patch.
                    items:
                      type: string
                    type: array
                required:
                - key
                - operator
                type: object
              type: array
            charset:
              description: 'Charset to use if for initializing the database Default
                value: "UTF8"'
              type: string
            clusterSize:
              description: 'Quantity of instances Default value: 1'
              format: int32
              type: integer
            containerImagePullPolicy:
              description: 'Policy definition to pull the Database Image More info:
                https://kubernetes.io/docs/concepts/containers/images/ Default value:'
              type: string
            containerName:
              description: Name to create the Database container
              type: string
            customAnnotations:
              additionalProperties:
                type: string
              description: 'This is a map of custom annotations that will be pushed
                down to the individual components Default value: None'
              type: object
            customLabels:
              additionalProperties:
                type: string
              description: 'This is a map of custom labels that will be pushed down
                to the individual components Default value: None'
              type: object
            databaseArchiveStorageClass:
              description: 'Storage Class for the Wal Archive directory to use for
                request it should be available for the database container Default
                value: 1Gi'
              type: string
            databaseCPU:
              description: 'CPU resource request which will be available for the database
                container Default value: 10Mi'
              type: string
            databaseCPULimit:
              description: 'Limit of CPU request which will be available for the database
                container Default value: 20Mi'
              type: string
            databaseMemoryLimit:
              description: 'Limit of Memory which will be available for the database
                container Default value: 1Gi'
              type: string
            databaseMemoryRequest:
              description: 'Limit of Memory Request which will be available for the
                database container Default value: 512Mi'
              type: string
            databaseName:
              description: 'Value for the Database Environment Variable (spec.databaseNameKeyEnvVar).
                Default value: example'
              type: string
            databaseNameKeyEnvVar:
              description: 'Key Value for the Database Environment Variable in order
                to inform the database mame Note that each database version/image
                can expected a different value for it. Default value: nil'
              type: string
            databasePort:
              description: Value for the Database Environment Variable in order to
                define the port which it should use. It will be used in its container
                as well
              format: int32
              type: integer
            databaseStorageClass:
              description: 'Storage Class for the data directory to use for request
                it should be available for the database container Default value: 1Gi'
              type: string
            databaseStorageRequest:
              description: 'Limit of Storage Request which will be available for the
                database container Default value: 1Gi'
              type: string
            databaseUID:
              description: 'a numeric value for the uid of the user that the container
                should run as Valid values are all dependent on k8 deployment platform
                Default value: 1000'
              format: int64
              type: integer
            databaseWalStorageClass:
              description: 'Storage Class for the WAL directory to use for request
                it should be available for the database container Default value: 1Gi'
              type: string
            enableAntiAffinity:
              description: 'key=value map that identify labels using the in operator
                to match nodes where the databases should go Default value: N/A'
              type: boolean
            highAvailability:
              description: 'Tell the operator to deploy this cluster using high availability.
                Default value: false'
              properties:
                enable:
                  description: 'Enables HA configuration for this deployment in the
                    operator Default value: false'
                  type: boolean
                endpoints:
                  description: 'Endpoint to use if you are using a 3rd party key value
                    store Default value: N/A'
                  type: string
                haClusterSettings:
                  description: 'This is values that will be used to configure the
                    initial  HA cluster for the the pods Default value: N/A'
                  properties:
                    additionalMasterReplicationSlots:
                      description: AdditionalMasterReplicationSlots defines additional
                        replication slots to be created on the master postgres instance.
                        Replication slots not defined here will be dropped from the
                        master instance (i.e. manually created replication slots will
                        be removed).
                      items:
                        type: string
                      type: array
                    additionalWalSenders:
                      description: AdditionalWalSenders defines the number of additional
                        wal_senders in addition to the ones internally defined by
                        stolon
                      type: integer
                    automaticPgRestart:
                      description: 'Enable automatic pg restart when pg parameters
                        that requires restart changes Default value: "false"'
                      type: boolean
                    convergenceTimeout:
                      description: 'Interval to wait for a db to be converged to the
                        required state when Default value: "30 seconds" no long operation
                        are expected.'
                      properties:
                        duration:
                          description: "\tEDBDurationInterface\t`json:\"-\"`"
                          type: string
                      type: object
                    dbWaitReadyTimeout:
                      description: 'Interval to wait for a db to boot and become ready
                        Default value: "5 seconds"'
                      properties:
                        duration:
                          description: "\tEDBDurationInterface\t`json:\"-\"`"
                          type: string
                      type: object
                    deadKeeperRemovalInterval:
                      description: 'Interval after which a dead keeper will be removed
                        from the cluster data Default value: "48 hours"'
                      properties:
                        duration:
                          description: "\tEDBDurationInterface\t`json:\"-\"`"
                          type: string
                      type: object
                    failInterval:
                      description: 'Interval after the first fail to declare a keeper
                        or a db as not healthy. Default value: "20 seconds"'
                      properties:
                        duration:
                          description: "\tEDBDurationInterface\t`json:\"-\"`"
                          type: string
                      type: object
                    initTimeout:
                      description: 'Interval to wait for a db to be initialized (doing
                        a initdb) Default value: "5 minutes"'
                      properties:
                        duration:
                          description: "\tEDBDurationInterface\t`json:\"-\"`"
                          type: string
                      type: object
                    maxStandbyLag:
                      description: 'Max lag in bytes that an asynchronous standy can
                        have to be elected in place of a failed master Default value:
                        "2048 bytes"'
                      format: int32
                      type: integer
                    maxStandbys:
                      description: 'Max number of standbys. This needs to be greater
                        enough to cover both standby managed by stolon and additional
                        standbys configured by the user. Its value affect different
                        postgres parameters like max_replication_slots and max_wal_senders.
                        Setting this to a number lower than the sum of stolon managed
                        standbys and user managed standbys will have unpredicatable
                        effects due to problems creating replication slots or replication
                        problems due to exhausted wal senders. Default value: "20"'
                      type: integer
                    maxStandbysPerSender:
                      description: 'Max number of standbys for every sender. A sender
                        can be a master or another standby (if/when implementing cascading
                        replication). Default value: "3"'
                      type: integer
                    maxSynchronousStandbys:
                      description: 'MaxSynchronousStandbys is the maximum number if
                        synchronous standbys to be configured when SynchronousReplication
                        is true Default value: "1"'
                      type: integer
                    minSynchronousStandbys:
                      description: 'MinSynchronousStandbys is the mininum number if
                        synchronous standbys to be configured when SynchronousReplication
                        is true Default value: "1"'
                      type: integer
                    proxyCheckInterval:
                      description: Interval to wait before next proxy check
                      properties:
                        duration:
                          description: "\tEDBDurationInterface\t`json:\"-\"`"
                          type: string
                      type: object
                    proxyTimeout:
                      description: 'Interval where the proxy must successfully complete
                        a check Default value: "5 seconds"'
                      properties:
                        duration:
                          description: "\tEDBDurationInterface\t`json:\"-\"`"
                          type: string
                      type: object
                    requestTimeout:
                      description: 'Time after which any request (keepers checks from
                        sentinel etc...) will fail. Default value: "10 seconds"'
                      properties:
                        duration:
                          description: "\tEDBDurationInterface\t`json:\"-\"`"
                          type: string
                      type: object
                    sleepInterval:
                      description: 'Interval to wait before next check Default value:
                        "5 seconds"'
                      properties:
                        duration:
                          description: "\tEDBDurationInterface\t`json:\"-\"`"
                          type: string
                      type: object
                    syncTimeout:
                      description: 'Interval to wait for a db to be synced with a
                        master Default value: "0 seconds"'
                      properties:
                        duration:
                          description: "\tEDBDurationInterface\t`json:\"-\"`"
                          type: string
                      type: object
                    synchronousReplication:
                      description: 'Use Synchronous replication between master and
                        its standbys Default value: "false"'
                      type: boolean
                    usePgrewind:
                      description: Whether to use pg_rewind
                      type: boolean
                  type: object
                highAvailabilityManager:
                  description: 'Defines the HA Manager implementation to use Default
                    value: ''STOLON'''
                  type: string
                image:
                  description: HA Manager image:tag
                  type: string
                listenAddress:
                  description: 'Listen address to use for in bound connections that
                    will be proxied Default value: ''0.0.0.0'''
                  type: string
                podDebug:
                  description: 'This is the service account that the pods, that participate
                    in HA will use Default value: false'
                  type: string
                tls:
                  description: Enables TLS for the HA deployment in the operator
                  properties:
                    certificateSecretName:
                      description: 'This is the certificate secret to use.  It will
                        be mounted in the Pods Default value: ""'
                      type: string
                    tlsEnabled:
                      description: 'Use TLS for front end and backend communication
                        between client->Proxy->Primary->Replica Default value: "false"'
                      type: boolean
                  type: object
              required:
              - enable
              - image
              type: object
            image:
              description: 'Database image:tag Default value: centos/postgresql-96-centos7'
              type: string
            noRedwoodCompat:
              description: 'Tell the operator to deploy this cluster running in PostgreSQL
                mode not Oracle Compatibilty mode. Default value: false'
              type: boolean
            pgExporter:
              description: 'Tells the operator to deploy a postgres exporter for monitoring.
                Default value: empty'
              properties:
                args:
                  description: 'The arguments to use for the command. It is an array
                    of strings and will be passed in as such to the container Default
                    value: None'
                  items:
                    type: string
                  type: array
                command:
                  description: 'The command to execute to start the container if none
                    is given it will let the entrypoint of the container rule Default
                    value: None'
                  items:
                    type: string
                  type: array
                enable:
                  description: 'Enables pgx_exporter for this deployment in the operator
                    Default value: false'
                  type: boolean
                environmentVariable:
                  additionalProperties:
                    type: string
                  description: 'This is a map of environment variable string that
                    will be set as environment variables in the exporter container
                    metricPath            key: "PGXEXPORTER_WEB_TELEMETRY_PATH" the
                    path for mounting the metric mount point disableDefaultMetrics  key:
                    "PGXEXPORTER_DISABLE_DEFAULT_METRICS "true" or "false" disableSettingsMetrics
                    key: "PGXEXPORTER_DISABLE_SETTINGS_METRICS") "true" or "false"
                    do not include PG SETTINGS INFORMATION autoDiscoverDatabases  key:
                    "PGXEXPORTER_AUTO_DISCOVER_DATABASES" "true" or "false"  Whether
                    to discover the databases on a server dynamically. excludeDatabases       key:
                    "PGXEXPORTER_EXCLUDE_DATABASES" comma separated list of databases
                    to remove when autoDiscoverDatabases is enabled Default value:
                    None'
                  type: object
                exporterPort:
                  description: 'Value for the Database Environment Variable in order
                    to define the port which it should use. It will be used in its
                    container as well Default value: 9187'
                  format: int32
                  type: integer
                extendedQueryConfigMap:
                  description: 'A config map that has additional queries to exec.
                    The following environment variables will be used DATA_SOURCE_USER=edb;DATA_SOURCE_PASS=edb;DATA_SOURCE_URI=localhost:5444/edb
                    If it is not provided we wil use the deployment secret and build
                    A compliant secert map that will be mounted as environment variables.
                    Default value: None'
                  type: string
                image:
                  description: PGX Exporter image:tag
                  type: string
                imagePullPolicy:
                  description: 'The pull policy to use for this container Policy definition
                    to pull the pgx_exporter Image Default value: IfNotPresent'
                  type: string
                secretName:
                  description: 'Secret Map that container the following environment
                    variables. The following environment variables will be used DATA_SOURCE_USER=edb;DATA_SOURCE_PASS=edb;DATA_SOURCE_URI=localhost:5444/edb
                    If it is not provided we wil use the deployment secret and build
                    A compliant secert map that will be mounted as environment variables.
                    Default value: the cluster secret.'
                  type: string
              required:
              - enable
              type: object
            postgresType:
              description: 'PostgresType defines if we are using EPAS or Community
                in the operator Default value: EPAS Valid values are EPAS and PG'
              type: string
            postgresVersion:
              description: 'Postgres major version number being used Default value:
                N/A Valid values are 10, 11, 12'
              type: integer
            primaryConfig:
              additionalProperties:
                type: string
              description: 'This is a map of pg variable string that will be set as
                environment variables in the Primary database container Default value:
                None'
              type: object
            replicaConfig:
              additionalProperties:
                type: string
              description: 'This is a map of pg variable string that will be set as
                environment variables in the Secondary database container Default
                value: None'
              type: object
            secretName:
              description: 'Start SecretMap for individual database, UserName and
                Password. Name of the SecretMap where the operator should looking
                for the EnvVars keys and/or values only Default value: cluster name'
              type: string
            serviceAccount:
              description: 'This is the service account that the pods, that participate
                in HA will use Default value: ''edb-operator'''
              type: string
            useSCC:
              description: 'Value determines if we should use pod security context
                or not Default value: false'
              type: boolean
            useSingleMountPoint:
              description: 'Flag to determine if we will use the recommend separation
                of mount points PGDATA,PGDATA_WAL, PGDATA_WALARCHIVE Default: false'
              type: boolean
            volumeMounts:
              description: 'List of volume mounts that the container will use for
                the database data Default value: nil'
              items:
                description: VolumeMount describes a mounting of a Volume within a
                  container.
                properties:
                  mountPath:
                    description: Path within the container at which the volume should
                      be mounted.  Must not contain ':'.
                    type: string
                  mountPropagation:
                    description: mountPropagation determines how mounts are propagated
                      from the host to container and the other way around. When not
                      set, MountPropagationNone is used. This field is beta in 1.10.
                    type: string
                  name:
                    description: This must match the Name of a Volume.
                    type: string
                  readOnly:
                    description: Mounted read-only if true, read-write otherwise (false
                      or unspecified). Defaults to false.
                    type: boolean
                  subPath:
                    description: Path within the volume from which the container's
                      volume should be mounted. Defaults to "" (volume's root).
                    type: string
                  subPathExpr:
                    description: Expanded path within the volume from which the container's
                      volume should be mounted. Behaves similarly to SubPath but environment
                      variable references $(VAR_NAME) are expanded using the container's
                      environment. Defaults to "" (volume's root). SubPathExpr and
                      SubPath are mutually exclusive.
                    type: string
                required:
                - mountPath
                - name
                type: object
              type: array
            volumes:
              description: 'List of volumes that the container will use for the database
                data Default value: nil'
              items:
                description: Volume represents a named volume in a pod that may be
                  accessed by any container in the pod.
                properties:
                  awsElasticBlockStore:
                    description: 'AWSElasticBlockStore represents an AWS Disk resource
                      that is attached to a kubelet''s host machine and then exposed
                      to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
                    properties:
                      fsType:
                        description: 'Filesystem type of the volume that you want
                          to mount. Tip: Ensure that the filesystem type is supported
                          by the host operating system. Examples: "ext4", "xfs", "ntfs".
                          Implicitly inferred to be "ext4" if unspecified. More info:
                          https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
                          TODO: how do we prevent errors in the filesystem from compromising
                          the machine'
                        type: string
                      partition:
                        description: 'The partition in the volume that you want to
                          mount. If omitted, the default is to mount by volume name.
                          Examples: For volume /dev/sda1, you specify the partition
                          as "1". Similarly, the volume partition for /dev/sda is
                          "0" (or you can leave the property empty).'
                        format: int32
                        type: integer
                      readOnly:
                        description: 'Specify "true" to force and set the ReadOnly
                          property in VolumeMounts to "true". If omitted, the default
                          is "false". More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
                        type: boolean
                      volumeID:
                        description: 'Unique ID of the persistent disk resource in
                          AWS (Amazon EBS volume). More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
                        type: string
                    required:
                    - volumeID
                    type: object
                  azureDisk:
                    description: AzureDisk represents an Azure Data Disk mount on
                      the host and bind mount to the pod.
                    properties:
                      cachingMode:
                        description: 'Host Caching mode: None, Read Only, Read Write.'
                        type: string
                      diskName:
                        description: The Name of the data disk in the blob storage
                        type: string
                      diskURI:
                        description: The URI the data disk in the blob storage
                        type: string
                      fsType:
                        description: Filesystem type to mount. Must be a filesystem
                          type supported by the host operating system. Ex. "ext4",
                          "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                        type: string
                      kind:
                        description: 'Expected values Shared: multiple blob disks
                          per storage account  Dedicated: single blob disk per storage
                          account  Managed: azure managed data disk (only in managed
                          availability set). defaults to shared'
                        type: string
                      readOnly:
                        description: Defaults to false (read/write). ReadOnly here
                          will force the ReadOnly setting in VolumeMounts.
                        type: boolean
                    required:
                    - diskName
                    - diskURI
                    type: object
                  azureFile:
                    description: AzureFile represents an Azure File Service mount
                      on the host and bind mount to the pod.
                    properties:
                      readOnly:
                        description: Defaults to false (read/write). ReadOnly here
                          will force the ReadOnly setting in VolumeMounts.
                        type: boolean
                      secretName:
                        description: the name of secret that contains Azure Storage
                          Account Name and Key
                        type: string
                      shareName:
                        description: Share Name
                        type: string
                    required:
                    - secretName
                    - shareName
                    type: object
                  cephfs:
                    description: CephFS represents a Ceph FS mount on the host that
                      shares a pod's lifetime
                    properties:
                      monitors:
                        description: 'Required: Monitors is a collection of Ceph monitors
                          More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                        items:
                          type: string
                        type: array
                      path:
                        description: 'Optional: Used as the mounted root, rather than
                          the full Ceph tree, default is /'
                        type: string
                      readOnly:
                        description: 'Optional: Defaults to false (read/write). ReadOnly
                          here will force the ReadOnly setting in VolumeMounts. More
                          info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                        type: boolean
                      secretFile:
                        description: 'Optional: SecretFile is the path to key ring
                          for User, default is /etc/ceph/user.secret More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                        type: string
                      secretRef:
                        description: 'Optional: SecretRef is reference to the authentication
                          secret for User, default is empty. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                        properties:
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                        type: object
                      user:
                        description: 'Optional: User is the rados user name, default
                          is admin More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                        type: string
                    required:
                    - monitors
                    type: object
                  cinder:
                    description: 'Cinder represents a cinder volume attached and mounted
                      on kubelets host machine. More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                    properties:
                      fsType:
                        description: 'Filesystem type to mount. Must be a filesystem
                          type supported by the host operating system. Examples: "ext4",
                          "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                          More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                        type: string
                      readOnly:
                        description: 'Optional: Defaults to false (read/write). ReadOnly
                          here will force the ReadOnly setting in VolumeMounts. More
                          info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                        type: boolean
                      secretRef:
                        description: 'Optional: points to a secret object containing
                          parameters used to connect to OpenStack.'
                        properties:
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                        type: object
                      volumeID:
                        description: 'volume id used to identify the volume in cinder.
                          More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                        type: string
                    required:
                    - volumeID
                    type: object
                  configMap:
                    description: ConfigMap represents a configMap that should populate
                      this volume
                    properties:
                      defaultMode:
                        description: 'Optional: mode bits to use on created files
                          by default. Must be a value between 0 and 0777. Defaults
                          to 0644. Directories within the path are not affected by
                          this setting. This might be in conflict with other options
                          that affect the file mode, like fsGroup, and the result
                          can be other mode bits set.'
                        format: int32
                        type: integer
                      items:
                        description: If unspecified, each key-value pair in the Data
                          field of the referenced ConfigMap will be projected into
                          the volume as a file whose name is the key and content is
                          the value. If specified, the listed keys will be projected
                          into the specified paths, and unlisted keys will not be
                          present. If a key is specified which is not present in the
                          ConfigMap, the volume setup will error unless it is marked
                          optional. Paths must be relative and may not contain the
                          '..' path or start with '..'.
                        items:
                          description: Maps a string key to a path within a volume.
                          properties:
                            key:
                              description: The key to project.
                              type: string
                            mode:
                              description: 'Optional: mode bits to use on this file,
                                must be a value between 0 and 0777. If not specified,
                                the volume defaultMode will be used. This might be
                                in conflict with other options that affect the file
                                mode, like fsGroup, and the result can be other mode
                                bits set.'
                              format: int32
                              type: integer
                            path:
                              description: The relative path of the file to map the
                                key to. May not be an absolute path. May not contain
                                the path element '..'. May not start with the string
                                '..'.
                              type: string
                          required:
                          - key
                          - path
                          type: object
                        type: array
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                      optional:
                        description: Specify whether the ConfigMap or its keys must
                          be defined
                        type: boolean
                    type: object
                  csi:
                    description: CSI (Container Storage Interface) represents storage
                      that is handled by an external CSI driver (Alpha feature).
                    properties:
                      driver:
                        description: Driver is the name of the CSI driver that handles
                          this volume. Consult with your admin for the correct name
                          as registered in the cluster.
                        type: string
                      fsType:
                        description: Filesystem type to mount. Ex. "ext4", "xfs",
                          "ntfs". If not provided, the empty value is passed to the
                          associated CSI driver which will determine the default filesystem
                          to apply.
                        type: string
                      nodePublishSecretRef:
                        description: NodePublishSecretRef is a reference to the secret
                          object containing sensitive information to pass to the CSI
                          driver to complete the CSI NodePublishVolume and NodeUnpublishVolume
                          calls. This field is optional, and  may be empty if no secret
                          is required. If the secret object contains more than one
                          secret, all secret references are passed.
                        properties:
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                        type: object
                      readOnly:
                        description: Specifies a read-only configuration for the volume.
                          Defaults to false (read/write).
                        type: boolean
                      volumeAttributes:
                        additionalProperties:
                          type: string
                        description: VolumeAttributes stores driver-specific properties
                          that are passed to the CSI driver. Consult your driver's
                          documentation for supported values.
                        type: object
                    required:
                    - driver
                    type: object
                  downwardAPI:
                    description: DownwardAPI represents downward API about the pod
                      that should populate this volume
                    properties:
                      defaultMode:
                        description: 'Optional: mode bits to use on created files
                          by default. Must be a value between 0 and 0777. Defaults
                          to 0644. Directories within the path are not affected by
                          this setting. This might be in conflict with other options
                          that affect the file mode, like fsGroup, and the result
                          can be other mode bits set.'
                        format: int32
                        type: integer
                      items:
                        description: Items is a list of downward API volume file
                        items:
                          description: DownwardAPIVolumeFile represents information
                            to create the file containing the pod field
                          properties:
                            fieldRef:
                              description: 'Required: Selects a field of the pod:
                                only annotations, labels, name and namespace are supported.'
                              properties:
                                apiVersion:
                                  description: Version of the schema the FieldPath
                                    is written in terms of, defaults to "v1".
                                  type: string
                                fieldPath:
                                  description: Path of the field to select in the
                                    specified API version.
                                  type: string
                              required:
                              - fieldPath
                              type: object
                            mode:
                              description: 'Optional: mode bits to use on this file,
                                must be a value between 0 and 0777. If not specified,
                                the volume defaultMode will be used. This might be
                                in conflict with other options that affect the file
                                mode, like fsGroup, and the result can be other mode
                                bits set.'
                              format: int32
                              type: integer
                            path:
                              description: 'Required: Path is  the relative path name
                                of the file to be created. Must not be absolute or
                                contain the ''..'' path. Must be utf-8 encoded. The
                                first item of the relative path must not start with
                                ''..'''
                              type: string
                            resourceFieldRef:
                              description: 'Selects a resource of the container: only
                                resources limits and requests (limits.cpu, limits.memory,
                                requests.cpu and requests.memory) are currently supported.'
                              properties:
                                containerName:
                                  description: 'Container name: required for volumes,
                                    optional for env vars'
                                  type: string
                                divisor:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Specifies the output format of the
                                    exposed resources, defaults to "1"
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                resource:
                                  description: 'Required: resource to select'
                                  type: string
                              required:
                              - resource
                              type: object
                          required:
                          - path
                          type: object
                        type: array
                    type: object
                  emptyDir:
                    description: 'EmptyDir represents a temporary directory that shares
                      a pod''s lifetime. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
                    properties:
                      medium:
                        description: 'What type of storage medium should back this
                          directory. The default is "" which means to use the node''s
                          default medium. Must be an empty string (default) or Memory.
                          More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
                        type: string
                      sizeLimit:
                        anyOf:
                        - type: integer
                        - type: string
                        description: 'Total amount of local storage required for this
                          EmptyDir volume. The size limit is also applicable for memory
                          medium. The maximum usage on memory medium EmptyDir would
                          be the minimum value between the SizeLimit specified here
                          and the sum of memory limits of all containers in a pod.
                          The default is nil which means that the limit is undefined.
                          More info: http://kubernetes.io/docs/user-guide/volumes#emptydir'
                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                        x-kubernetes-int-or-string: true
                    type: object
                  fc:
                    description: FC represents a Fibre Channel resource that is attached
                      to a kubelet's host machine and then exposed to the pod.
                    properties:
                      fsType:
                        description: 'Filesystem type to mount. Must be a filesystem
                          type supported by the host operating system. Ex. "ext4",
                          "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                          TODO: how do we prevent errors in the filesystem from compromising
                          the machine'
                        type: string
                      lun:
                        description: 'Optional: FC target lun number'
                        format: int32
                        type: integer
                      readOnly:
                        description: 'Optional: Defaults to false (read/write). ReadOnly
                          here will force the ReadOnly setting in VolumeMounts.'
                        type: boolean
                      targetWWNs:
                        description: 'Optional: FC target worldwide names (WWNs)'
                        items:
                          type: string
                        type: array
                      wwids:
                        description: 'Optional: FC volume world wide identifiers (wwids)
                          Either wwids or combination of targetWWNs and lun must be
                          set, but not both simultaneously.'
                        items:
                          type: string
                        type: array
                    type: object
                  flexVolume:
                    description: FlexVolume represents a generic volume resource that
                      is provisioned/attached using an exec based plugin.
                    properties:
                      driver:
                        description: Driver is the name of the driver to use for this
                          volume.
                        type: string
                      fsType:
                        description: Filesystem type to mount. Must be a filesystem
                          type supported by the host operating system. Ex. "ext4",
                          "xfs", "ntfs". The default filesystem depends on FlexVolume
                          script.
                        type: string
                      options:
                        additionalProperties:
                          type: string
                        description: 'Optional: Extra command options if any.'
                        type: object
                      readOnly:
                        description: 'Optional: Defaults to false (read/write). ReadOnly
                          here will force the ReadOnly setting in VolumeMounts.'
                        type: boolean
                      secretRef:
                        description: 'Optional: SecretRef is reference to the secret
                          object containing sensitive information to pass to the plugin
                          scripts. This may be empty if no secret object is specified.
                          If the secret object contains more than one secret, all
                          secrets are passed to the plugin scripts.'
                        properties:
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                        type: object
                    required:
                    - driver
                    type: object
                  flocker:
                    description: Flocker represents a Flocker volume attached to a
                      kubelet's host machine. This depends on the Flocker control
                      service being running
                    properties:
                      datasetName:
                        description: Name of the dataset stored as metadata -> name
                          on the dataset for Flocker should be considered as deprecated
                        type: string
                      datasetUUID:
                        description: UUID of the dataset. This is unique identifier
                          of a Flocker dataset
                        type: string
                    type: object
                  gcePersistentDisk:
                    description: 'GCEPersistentDisk represents a GCE Disk resource
                      that is attached to a kubelet''s host machine and then exposed
                      to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                    properties:
                      fsType:
                        description: 'Filesystem type of the volume that you want
                          to mount. Tip: Ensure that the filesystem type is supported
                          by the host operating system. Examples: "ext4", "xfs", "ntfs".
                          Implicitly inferred to be "ext4" if unspecified. More info:
                          https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                          TODO: how do we prevent errors in the filesystem from compromising
                          the machine'
                        type: string
                      partition:
                        description: 'The partition in the volume that you want to
                          mount. If omitted, the default is to mount by volume name.
                          Examples: For volume /dev/sda1, you specify the partition
                          as "1". Similarly, the volume partition for /dev/sda is
                          "0" (or you can leave the property empty). More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                        format: int32
                        type: integer
                      pdName:
                        description: 'Unique name of the PD resource in GCE. Used
                          to identify the disk in GCE. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                        type: string
                      readOnly:
                        description: 'ReadOnly here will force the ReadOnly setting
                          in VolumeMounts. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                        type: boolean
                    required:
                    - pdName
                    type: object
                  gitRepo:
                    description: 'GitRepo represents a git repository at a particular
                      revision. DEPRECATED: GitRepo is deprecated. To provision a
                      container with a git repo, mount an EmptyDir into an InitContainer
                      that clones the repo using git, then mount the EmptyDir into
                      the Pod''s container.'
                    properties:
                      directory:
                        description: Target directory name. Must not contain or start
                          with '..'.  If '.' is supplied, the volume directory will
                          be the git repository.  Otherwise, if specified, the volume
                          will contain the git repository in the subdirectory with
                          the given name.
                        type: string
                      repository:
                        description: Repository URL
                        type: string
                      revision:
                        description: Commit hash for the specified revision.
                        type: string
                    required:
                    - repository
                    type: object
                  glusterfs:
                    description: 'Glusterfs represents a Glusterfs mount on the host
                      that shares a pod''s lifetime. More info: https://examples.k8s.io/volumes/glusterfs/README.md'
                    properties:
                      endpoints:
                        description: 'EndpointsName is the endpoint name that details
                          Glusterfs topology. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'
                        type: string
                      path:
                        description: 'Path is the Glusterfs volume path. More info:
                          https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'
                        type: string
                      readOnly:
                        description: 'ReadOnly here will force the Glusterfs volume
                          to be mounted with read-only permissions. Defaults to false.
                          More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'
                        type: boolean
                    required:
                    - endpoints
                    - path
                    type: object
                  hostPath:
                    description: 'HostPath represents a pre-existing file or directory
                      on the host machine that is directly exposed to the container.
                      This is generally used for system agents or other privileged
                      things that are allowed to see the host machine. Most containers
                      will NOT need this. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
                      TODO(jonesdl) We need to restrict who can use host directory
                      mounts and who can/can not mount host directories as read/write.'
                    properties:
                      path:
                        description: 'Path of the directory on the host. If the path
                          is a symlink, it will follow the link to the real path.
                          More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath'
                        type: string
                      type:
                        description: 'Type for HostPath Volume Defaults to "" More
                          info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath'
                        type: string
                    required:
                    - path
                    type: object
                  iscsi:
                    description: 'ISCSI represents an ISCSI Disk resource that is
                      attached to a kubelet''s host machine and then exposed to the
                      pod. More info: https://examples.k8s.io/volumes/iscsi/README.md'
                    properties:
                      chapAuthDiscovery:
                        description: whether support iSCSI Discovery CHAP authentication
                        type: boolean
                      chapAuthSession:
                        description: whether support iSCSI Session CHAP authentication
                        type: boolean
                      fsType:
                        description: 'Filesystem type of the volume that you want
                          to mount. Tip: Ensure that the filesystem type is supported
                          by the host operating system. Examples: "ext4", "xfs", "ntfs".
                          Implicitly inferred to be "ext4" if unspecified. More info:
                          https://kubernetes.io/docs/concepts/storage/volumes#iscsi
                          TODO: how do we prevent errors in the filesystem from compromising
                          the machine'
                        type: string
                      initiatorName:
                        description: Custom iSCSI Initiator Name. If initiatorName
                          is specified with iscsiInterface simultaneously, new iSCSI
                          interface <target portal>:<volume name> will be created
                          for the connection.
                        type: string
                      iqn:
                        description: Target iSCSI Qualified Name.
                        type: string
                      iscsiInterface:
                        description: iSCSI Interface Name that uses an iSCSI transport.
                          Defaults to 'default' (tcp).
                        type: string
                      lun:
                        description: iSCSI Target Lun number.
                        format: int32
                        type: integer
                      portals:
                        description: iSCSI Target Portal List. The portal is either
                          an IP or ip_addr:port if the port is other than default
                          (typically TCP ports 860 and 3260).
                        items:
                          type: string
                        type: array
                      readOnly:
                        description: ReadOnly here will force the ReadOnly setting
                          in VolumeMounts. Defaults to false.
                        type: boolean
                      secretRef:
                        description: CHAP Secret for iSCSI target and initiator authentication
                        properties:
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                        type: object
                      targetPortal:
                        description: iSCSI Target Portal. The Portal is either an
                          IP or ip_addr:port if the port is other than default (typically
                          TCP ports 860 and 3260).
                        type: string
                    required:
                    - iqn
                    - lun
                    - targetPortal
                    type: object
                  name:
                    description: 'Volume''s name. Must be a DNS_LABEL and unique within
                      the pod. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  nfs:
                    description: 'NFS represents an NFS mount on the host that shares
                      a pod''s lifetime More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                    properties:
                      path:
                        description: 'Path that is exported by the NFS server. More
                          info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                        type: string
                      readOnly:
                        description: 'ReadOnly here will force the NFS export to be
                          mounted with read-only permissions. Defaults to false. More
                          info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                        type: boolean
                      server:
                        description: 'Server is the hostname or IP address of the
                          NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                        type: string
                    required:
                    - path
                    - server
                    type: object
                  persistentVolumeClaim:
                    description: 'PersistentVolumeClaimVolumeSource represents a reference
                      to a PersistentVolumeClaim in the same namespace. More info:
                      https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                    properties:
                      claimName:
                        description: 'ClaimName is the name of a PersistentVolumeClaim
                          in the same namespace as the pod using this volume. More
                          info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                        type: string
                      readOnly:
                        description: Will force the ReadOnly setting in VolumeMounts.
                          Default false.
                        type: boolean
                    required:
                    - claimName
                    type: object
                  photonPersistentDisk:
                    description: PhotonPersistentDisk represents a PhotonController
                      persistent disk attached and mounted on kubelets host machine
                    properties:
                      fsType:
                        description: Filesystem type to mount. Must be a filesystem
                          type supported by the host operating system. Ex. "ext4",
                          "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                        type: string
                      pdID:
                        description: ID that identifies Photon Controller persistent
                          disk
                        type: string
                    required:
                    - pdID
                    type: object
                  portworxVolume:
                    description: PortworxVolume represents a portworx volume attached
                      and mounted on kubelets host machine
                    properties:
                      fsType:
                        description: FSType represents the filesystem type to mount
                          Must be a filesystem type supported by the host operating
                          system. Ex. "ext4", "xfs". Implicitly inferred to be "ext4"
                          if unspecified.
                        type: string
                      readOnly:
                        description: Defaults to false (read/write). ReadOnly here
                          will force the ReadOnly setting in VolumeMounts.
                        type: boolean
                      volumeID:
                        description: VolumeID uniquely identifies a Portworx volume
                        type: string
                    required:
                    - volumeID
                    type: object
                  projected:
                    description: Items for all in one resources secrets, configmaps,
                      and downward API
                    properties:
                      defaultMode:
                        description: Mode bits to use on created files by default.
                          Must be a value between 0 and 0777. Directories within the
                          path are not affected by this setting. This might be in
                          conflict with other options that affect the file mode, like
                          fsGroup, and the result can be other mode bits set.
                        format: int32
                        type: integer
                      sources:
                        description: list of volume projections
                        items:
                          description: Projection that may be projected along with
                            other supported volume types
                          properties:
                            configMap:
                              description: information about the configMap data to
                                project
                              properties:
                                items:
                                  description: If unspecified, each key-value pair
                                    in the Data field of the referenced ConfigMap
                                    will be projected into the volume as a file whose
                                    name is the key and content is the value. If specified,
                                    the listed keys will be projected into the specified
                                    paths, and unlisted keys will not be present.
                                    If a key is specified which is not present in
                                    the ConfigMap, the volume setup will error unless
                                    it is marked optional. Paths must be relative
                                    and may not contain the '..' path or start with
                                    '..'.
                                  items:
                                    description: Maps a string key to a path within
                                      a volume.
                                    properties:
                                      key:
                                        description: The key to project.
                                        type: string
                                      mode:
                                        description: 'Optional: mode bits to use on
                                          this file, must be a value between 0 and
                                          0777. If not specified, the volume defaultMode
                                          will be used. This might be in conflict
                                          with other options that affect the file
                                          mode, like fsGroup, and the result can be
                                          other mode bits set.'
                                        format: int32
                                        type: integer
                                      path:
                                        description: The relative path of the file
                                          to map the key to. May not be an absolute
                                          path. May not contain the path element '..'.
                                          May not start with the string '..'.
                                        type: string
                                    required:
                                    - key
                                    - path
                                    type: object
                                  type: array
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                                optional:
                                  description: Specify whether the ConfigMap or its
                                    keys must be defined
                                  type: boolean
                              type: object
                            downwardAPI:
                              description: information about the downwardAPI data
                                to project
                              properties:
                                items:
                                  description: Items is a list of DownwardAPIVolume
                                    file
                                  items:
                                    description: DownwardAPIVolumeFile represents
                                      information to create the file containing the
                                      pod field
                                    properties:
                                      fieldRef:
                                        description: 'Required: Selects a field of
                                          the pod: only annotations, labels, name
                                          and namespace are supported.'
                                        properties:
                                          apiVersion:
                                            description: Version of the schema the
                                              FieldPath is written in terms of, defaults
                                              to "v1".
                                            type: string
                                          fieldPath:
                                            description: Path of the field to select
                                              in the specified API version.
                                            type: string
                                        required:
                                        - fieldPath
                                        type: object
                                      mode:
                                        description: 'Optional: mode bits to use on
                                          this file, must be a value between 0 and
                                          0777. If not specified, the volume defaultMode
                                          will be used. This might be in conflict
                                          with other options that affect the file
                                          mode, like fsGroup, and the result can be
                                          other mode bits set.'
                                        format: int32
                                        type: integer
                                      path:
                                        description: 'Required: Path is  the relative
                                          path name of the file to be created. Must
                                          not be absolute or contain the ''..'' path.
                                          Must be utf-8 encoded. The first item of
                                          the relative path must not start with ''..'''
                                        type: string
                                      resourceFieldRef:
                                        description: 'Selects a resource of the container:
                                          only resources limits and requests (limits.cpu,
                                          limits.memory, requests.cpu and requests.memory)
                                          are currently supported.'
                                        properties:
                                          containerName:
                                            description: 'Container name: required
                                              for volumes, optional for env vars'
                                            type: string
                                          divisor:
                                            anyOf:
                                            - type: integer
                                            - type: string
                                            description: Specifies the output format
                                              of the exposed resources, defaults to
                                              "1"
                                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                            x-kubernetes-int-or-string: true
                                          resource:
                                            description: 'Required: resource to select'
                                            type: string
                                        required:
                                        - resource
                                        type: object
                                    required:
                                    - path
                                    type: object
                                  type: array
                              type: object
                            secret:
                              description: information about the secret data to project
                              properties:
                                items:
                                  description: If unspecified, each key-value pair
                                    in the Data field of the referenced Secret will
                                    be projected into the volume as a file whose name
                                    is the key and content is the value. If specified,
                                    the listed keys will be projected into the specified
                                    paths, and unlisted keys will not be present.
                                    If a key is specified which is not present in
                                    the Secret, the volume setup will error unless
                                    it is marked optional. Paths must be relative
                                    and may not contain the '..' path or start with
                                    '..'.
                                  items:
                                    description: Maps a string key to a path within
                                      a volume.
                                    properties:
                                      key:
                                        description: The key to project.
                                        type: string
                                      mode:
                                        description: 'Optional: mode bits to use on
                                          this file, must be a value between 0 and
                                          0777. If not specified, the volume defaultMode
                                          will be used. This might be in conflict
                                          with other options that affect the file
                                          mode, like fsGroup, and the result can be
                                          other mode bits set.'
                                        format: int32
                                        type: integer
                                      path:
                                        description: The relative path of the file
                                          to map the key to. May not be an absolute
                                          path. May not contain the path element '..'.
                                          May not start with the string '..'.
                                        type: string
                                    required:
                                    - key
                                    - path
                                    type: object
                                  type: array
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              type: object
                            serviceAccountToken:
                              description: information about the serviceAccountToken
                                data to project
                              properties:
                                audience:
                                  description: Audience is the intended audience of
                                    the token. A recipient of a token must identify
                                    itself with an identifier specified in the audience
                                    of the token, and otherwise should reject the
                                    token. The audience defaults to the identifier
                                    of the apiserver.
                                  type: string
                                expirationSeconds:
                                  description: ExpirationSeconds is the requested
                                    duration of validity of the service account token.
                                    As the token approaches expiration, the kubelet
                                    volume plugin will proactively rotate the service
                                    account token. The kubelet will start trying to
                                    rotate the token if the token is older than 80
                                    percent of its time to live or if the token is
                                    older than 24 hours.Defaults to 1 hour and must
                                    be at least 10 minutes.
                                  format: int64
                                  type: integer
                                path:
                                  description: Path is the path relative to the mount
                                    point of the file to project the token into.
                                  type: string
                              required:
                              - path
                              type: object
                          type: object
                        type: array
                    required:
                    - sources
                    type: object
                  quobyte:
                    description: Quobyte represents a Quobyte mount on the host that
                      shares a pod's lifetime
                    properties:
                      group:
                        description: Group to map volume access to Default is no group
                        type: string
                      readOnly:
                        description: ReadOnly here will force the Quobyte volume to
                          be mounted with read-only permissions. Defaults to false.
                        type: boolean
                      registry:
                        description: Registry represents a single or multiple Quobyte
                          Registry services specified as a string as host:port pair
                          (multiple entries are separated with commas) which acts
                          as the central registry for volumes
                        type: string
                      tenant:
                        description: Tenant owning the given Quobyte volume in the
                          Backend Used with dynamically provisioned Quobyte volumes,
                          value is set by the plugin
                        type: string
                      user:
                        description: User to map volume access to Defaults to serivceaccount
                          user
                        type: string
                      volume:
                        description: Volume is a string that references an already
                          created Quobyte volume by name.
                        type: string
                    required:
                    - registry
                    - volume
                    type: object
                  rbd:
                    description: 'RBD represents a Rados Block Device mount on the
                      host that shares a pod''s lifetime. More info: https://examples.k8s.io/volumes/rbd/README.md'
                    properties:
                      fsType:
                        description: 'Filesystem type of the volume that you want
                          to mount. Tip: Ensure that the filesystem type is supported
                          by the host operating system. Examples: "ext4", "xfs", "ntfs".
                          Implicitly inferred to be "ext4" if unspecified. More info:
                          https://kubernetes.io/docs/concepts/storage/volumes#rbd
                          TODO: how do we prevent errors in the filesystem from compromising
                          the machine'
                        type: string
                      image:
                        description: 'The rados image name. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                        type: string
                      keyring:
                        description: 'Keyring is the path to key ring for RBDUser.
                          Default is /etc/ceph/keyring. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                        type: string
                      monitors:
                        description: 'A collection of Ceph monitors. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                        items:
                          type: string
                        type: array
                      pool:
                        description: 'The rados pool name. Default is rbd. More info:
                          https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                        type: string
                      readOnly:
                        description: 'ReadOnly here will force the ReadOnly setting
                          in VolumeMounts. Defaults to false. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                        type: boolean
                      secretRef:
                        description: 'SecretRef is name of the authentication secret
                          for RBDUser. If provided overrides keyring. Default is nil.
                          More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                        properties:
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                        type: object
                      user:
                        description: 'The rados user name. Default is admin. More
                          info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                        type: string
                    required:
                    - image
                    - monitors
                    type: object
                  scaleIO:
                    description: ScaleIO represents a ScaleIO persistent volume attached
                      and mounted on Kubernetes nodes.
                    properties:
                      fsType:
                        description: Filesystem type to mount. Must be a filesystem
                          type supported by the host operating system. Ex. "ext4",
                          "xfs", "ntfs". Default is "xfs".
                        type: string
                      gateway:
                        description: The host address of the ScaleIO API Gateway.
                        type: string
                      protectionDomain:
                        description: The name of the ScaleIO Protection Domain for
                          the configured storage.
                        type: string
                      readOnly:
                        description: Defaults to false (read/write). ReadOnly here
                          will force the ReadOnly setting in VolumeMounts.
                        type: boolean
                      secretRef:
                        description: SecretRef references to the secret for ScaleIO
                          user and other sensitive information. If this is not provided,
                          Login operation will fail.
                        properties:
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                        type: object
                      sslEnabled:
                        description: Flag to enable/disable SSL communication with
                          Gateway, default false
                        type: boolean
                      storageMode:
                        description: Indicates whether the storage for a volume should
                          be ThickProvisioned or ThinProvisioned. Default is ThinProvisioned.
                        type: string
                      storagePool:
                        description: The ScaleIO Storage Pool associated with the
                          protection domain.
                        type: string
                      system:
                        description: The name of the storage system as configured
                          in ScaleIO.
                        type: string
                      volumeName:
                        description: The name of a volume already created in the ScaleIO
                          system that is associated with this volume source.
                        type: string
                    required:
                    - gateway
                    - secretRef
                    - system
                    type: object
                  secret:
                    description: 'Secret represents a secret that should populate
                      this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret'
                    properties:
                      defaultMode:
                        description: 'Optional: mode bits to use on created files
                          by default. Must be a value between 0 and 0777. Defaults
                          to 0644. Directories within the path are not affected by
                          this setting. This might be in conflict with other options
                          that affect the file mode, like fsGroup, and the result
                          can be other mode bits set.'
                        format: int32
                        type: integer
                      items:
                        description: If unspecified, each key-value pair in the Data
                          field of the referenced Secret will be projected into the
                          volume as a file whose name is the key and content is the
                          value. If specified, the listed keys will be projected into
                          the specified paths, and unlisted keys will not be present.
                          If a key is specified which is not present in the Secret,
                          the volume setup will error unless it is marked optional.
                          Paths must be relative and may not contain the '..' path
                          or start with '..'.
                        items:
                          description: Maps a string key to a path within a volume.
                          properties:
                            key:
                              description: The key to project.
                              type: string
                            mode:
                              description: 'Optional: mode bits to use on this file,
                                must be a value between 0 and 0777. If not specified,
                                the volume defaultMode will be used. This might be
                                in conflict with other options that affect the file
                                mode, like fsGroup, and the result can be other mode
                                bits set.'
                              format: int32
                              type: integer
                            path:
                              description: The relative path of the file to map the
                                key to. May not be an absolute path. May not contain
                                the path element '..'. May not start with the string
                                '..'.
                              type: string
                          required:
                          - key
                          - path
                          type: object
                        type: array
                      optional:
                        description: Specify whether the Secret or its keys must be
                          defined
                        type: boolean
                      secretName:
                        description: 'Name of the secret in the pod''s namespace to
                          use. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret'
                        type: string
                    type: object
                  storageos:
                    description: StorageOS represents a StorageOS volume attached
                      and mounted on Kubernetes nodes.
                    properties:
                      fsType:
                        description: Filesystem type to mount. Must be a filesystem
                          type supported by the host operating system. Ex. "ext4",
                          "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                        type: string
                      readOnly:
                        description: Defaults to false (read/write). ReadOnly here
                          will force the ReadOnly setting in VolumeMounts.
                        type: boolean
                      secretRef:
                        description: SecretRef specifies the secret to use for obtaining
                          the StorageOS API credentials.  If not specified, default
                          values will be attempted.
                        properties:
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                        type: object
                      volumeName:
                        description: VolumeName is the human-readable name of the
                          StorageOS volume.  Volume names are only unique within a
                          namespace.
                        type: string
                      volumeNamespace:
                        description: VolumeNamespace specifies the scope of the volume
                          within StorageOS.  If no namespace is specified then the
                          Pod's namespace will be used.  This allows the Kubernetes
                          name scoping to be mirrored within StorageOS for tighter
                          integration. Set VolumeName to any name to override the
                          default behaviour. Set to "default" if you are not using
                          namespaces within StorageOS. Namespaces that do not pre-exist
                          within StorageOS will be created.
                        type: string
                    type: object
                  vsphereVolume:
                    description: VsphereVolume represents a vSphere volume attached
                      and mounted on kubelets host machine
                    properties:
                      fsType:
                        description: Filesystem type to mount. Must be a filesystem
                          type supported by the host operating system. Ex. "ext4",
                          "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                        type: string
                      storagePolicyID:
                        description: Storage Policy Based Management (SPBM) profile
                          ID associated with the StoragePolicyName.
                        type: string
                      storagePolicyName:
                        description: Storage Policy Based Management (SPBM) profile
                          name.
                        type: string
                      volumePath:
                        description: Path that identifies vSphere volume vmdk
                        type: string
                    required:
                    - volumePath
                    type: object
                required:
                - name
                type: object
              type: array
            walgConfig:
              description: 'Holds WAL-G configuration information used for backups
                and restores Default value: nil'
              properties:
                args:
                  description: 'WAL-G Args default: none TODO desc/defaults'
                  items:
                    type: string
                  type: array
                backupRetentionPolicy:
                  description: 'WAL-G BackupRetentionPolicy default: false TODO desc/defaults'
                  type: integer
                backupSchedule:
                  description: 'WAL-G BackupSchedule default: false TODO desc/defaults'
                  type: string
                commands:
                  description: 'WAL-G Commands default: none TODO desc/defaults'
                  items:
                    type: string
                  type: array
                enableWalg:
                  description: 'Enables WAL-G backups and restores Default value:
                    false TODO desc'
                  type: boolean
                image:
                  description: 'WAL-G Image default: latest TODO desc/defaults'
                  type: string
                imagePullPolicy:
                  description: 'WAL-G ImagePullPolicy default: Always TODO desc/defaults'
                  type: string
                initArgs:
                  description: 'WAL-G Init Args default: none TODO desc/defaults'
                  items:
                    type: string
                  type: array
                initCmd:
                  description: 'WAL-G Init Commands default: none TODO desc/defaults'
                  items:
                    type: string
                  type: array
                regionAWS:
                  description: AWS Region TODO desc/defaults
                  type: string
                restoreBackupName:
                  description: 'WAL-G RestoreBackupName default: false TODO desc/defaults'
                  type: string
                restoreOnStartup:
                  description: 'WAL-G RestoreOnStartup default: false TODO desc/defaults'
                  type: boolean
                restoreTargetTime:
                  description: 'WAL-G RestoreTargetTime default: TODO TODO desc/defaults'
                  type: string
                walgPrefix:
                  description: WAL-G storage provider Prefix TODO desc/defaults
                  type: string
                walgSecret:
                  description: WAL-G Secret Name for storage provider creds TODO desc/defaults
                  type: string
              type: object
          required:
          - databasePort
          - databaseStorageClass
          - postgresType
          - postgresVersion
          - secretName
          type: object
        status:
          description: EDBPostgresStatus defines the observed state of Database
          properties:
            actionStatus:
              description: It will be as "OK or an Error when when the action is performed
              type: string
            databaseStatus:
              description: It will be as "OK when all objects are created successfully
              type: string
            deploymentStatus:
              description: Status of the Database Deployment created and managed by
                it
              properties:
                collisionCount:
                  description: collisionCount is the count of hash collisions for
                    the StatefulSet. The StatefulSet controller uses this field as
                    a collision avoidance mechanism when it needs to create the name
                    for the newest ControllerRevision.
                  format: int32
                  type: integer
                conditions:
                  description: Represents the latest available observations of a statefulset's
                    current state.
                  items:
                    description: StatefulSetCondition describes the state of a statefulset
                      at a certain point.
                    properties:
                      lastTransitionTime:
                        description: Last time the condition transitioned from one
                          status to another.
                        format: date-time
                        type: string
                      message:
                        description: A human readable message indicating details about
                          the transition.
                        type: string
                      reason:
                        description: The reason for the condition's last transition.
                        type: string
                      status:
                        description: Status of the condition, one of True, False,
                          Unknown.
                        type: string
                      type:
                        description: Type of statefulset condition.
                        type: string
                    required:
                    - status
                    - type
                    type: object
                  type: array
                currentReplicas:
                  description: currentReplicas is the number of Pods created by the
                    StatefulSet controller from the StatefulSet version indicated
                    by currentRevision.
                  format: int32
                  type: integer
                currentRevision:
                  description: currentRevision, if not empty, indicates the version
                    of the StatefulSet used to generate Pods in the sequence [0,currentReplicas).
                  type: string
                observedGeneration:
                  description: observedGeneration is the most recent generation observed
                    for this StatefulSet. It corresponds to the StatefulSet's generation,
                    which is updated on mutation by the API Server.
                  format: int64
                  type: integer
                readyReplicas:
                  description: readyReplicas is the number of Pods created by the
                    StatefulSet controller that have a Ready Condition.
                  format: int32
                  type: integer
                replicas:
                  description: replicas is the number of Pods created by the StatefulSet
                    controller.
                  format: int32
                  type: integer
                updateRevision:
                  description: updateRevision, if not empty, indicates the version
                    of the StatefulSet used to generate Pods in the sequence [replicas-updatedReplicas,replicas)
                  type: string
                updatedReplicas:
                  description: updatedReplicas is the number of Pods created by the
                    StatefulSet controller from the StatefulSet version indicated
                    by updateRevision.
                  format: int32
                  type: integer
              required:
              - replicas
              type: object
            haStatus:
              description: It will be as "OK or an Error when all objects are created
                successfully
              properties:
                haConfigMapStatus:
                  type: string
                haProxyServiceStatus:
                  description: ServiceStatus represents the current status of a service.
                  properties:
                    loadBalancer:
                      description: LoadBalancer contains the current status of the
                        load-balancer, if one is present.
                      properties:
                        ingress:
                          description: Ingress is a list containing ingress points
                            for the load-balancer. Traffic intended for the service
                            should be sent to these ingress points.
                          items:
                            description: 'LoadBalancerIngress represents the status
                              of a load-balancer ingress point: traffic intended for
                              the service should be sent to an ingress point.'
                            properties:
                              hostname:
                                description: Hostname is set for load-balancer ingress
                                  points that are DNS based (typically AWS load-balancers)
                                type: string
                              ip:
                                description: IP is set for load-balancer ingress points
                                  that are IP based (typically GCE or OpenStack load-balancers)
                                type: string
                            type: object
                          type: array
                      type: object
                  type: object
                haProxyStatus:
                  description: DeploymentStatus is the most recently observed status
                    of the Deployment.
                  properties:
                    availableReplicas:
                      description: Total number of available pods (ready for at least
                        minReadySeconds) targeted by this deployment.
                      format: int32
                      type: integer
                    collisionCount:
                      description: Count of hash collisions for the Deployment. The
                        Deployment controller uses this field as a collision avoidance
                        mechanism when it needs to create the name for the newest
                        ReplicaSet.
                      format: int32
                      type: integer
                    conditions:
                      description: Represents the latest available observations of
                        a deployment's current state.
                      items:
                        description: DeploymentCondition describes the state of a
                          deployment at a certain point.
                        properties:
                          lastTransitionTime:
                            description: Last time the condition transitioned from
                              one status to another.
                            format: date-time
                            type: string
                          lastUpdateTime:
                            description: The last time this condition was updated.
                            format: date-time
                            type: string
                          message:
                            description: A human readable message indicating details
                              about the transition.
                            type: string
                          reason:
                            description: The reason for the condition's last transition.
                            type: string
                          status:
                            description: Status of the condition, one of True, False,
                              Unknown.
                            type: string
                          type:
                            description: Type of deployment condition.
                            type: string
                        required:
                        - status
                        - type
                        type: object
                      type: array
                    observedGeneration:
                      description: The generation observed by the deployment controller.
                      format: int64
                      type: integer
                    readyReplicas:
                      description: Total number of ready pods targeted by this deployment.
                      format: int32
                      type: integer
                    replicas:
                      description: Total number of non-terminated pods targeted by
                        this deployment (their labels match the selector).
                      format: int32
                      type: integer
                    unavailableReplicas:
                      description: Total number of unavailable pods targeted by this
                        deployment. This is the total number of pods that are still
                        required for the deployment to have 100% available capacity.
                        They may either be pods that are running but not yet available
                        or pods that still have not been created.
                      format: int32
                      type: integer
                    updatedReplicas:
                      description: Total number of non-terminated pods targeted by
                        this deployment that have the desired template spec.
                      format: int32
                      type: integer
                  type: object
                haSentinelStatus:
                  description: DeploymentStatus is the most recently observed status
                    of the Deployment.
                  properties:
                    availableReplicas:
                      description: Total number of available pods (ready for at least
                        minReadySeconds) targeted by this deployment.
                      format: int32
                      type: integer
                    collisionCount:
                      description: Count of hash collisions for the Deployment. The
                        Deployment controller uses this field as a collision avoidance
                        mechanism when it needs to create the name for the newest
                        ReplicaSet.
                      format: int32
                      type: integer
                    conditions:
                      description: Represents the latest available observations of
                        a deployment's current state.
                      items:
                        description: DeploymentCondition describes the state of a
                          deployment at a certain point.
                        properties:
                          lastTransitionTime:
                            description: Last time the condition transitioned from
                              one status to another.
                            format: date-time
                            type: string
                          lastUpdateTime:
                            description: The last time this condition was updated.
                            format: date-time
                            type: string
                          message:
                            description: A human readable message indicating details
                              about the transition.
                            type: string
                          reason:
                            description: The reason for the condition's last transition.
                            type: string
                          status:
                            description: Status of the condition, one of True, False,
                              Unknown.
                            type: string
                          type:
                            description: Type of deployment condition.
                            type: string
                        required:
                        - status
                        - type
                        type: object
                      type: array
                    observedGeneration:
                      description: The generation observed by the deployment controller.
                      format: int64
                      type: integer
                    readyReplicas:
                      description: Total number of ready pods targeted by this deployment.
                      format: int32
                      type: integer
                    replicas:
                      description: Total number of non-terminated pods targeted by
                        this deployment (their labels match the selector).
                      format: int32
                      type: integer
                    unavailableReplicas:
                      description: Total number of unavailable pods targeted by this
                        deployment. This is the total number of pods that are still
                        required for the deployment to have 100% available capacity.
                        They may either be pods that are running but not yet available
                        or pods that still have not been created.
                      format: int32
                      type: integer
                    updatedReplicas:
                      description: Total number of non-terminated pods targeted by
                        this deployment that have the desired template spec.
                      format: int32
                      type: integer
                  type: object
                haStatus:
                  type: string
              required:
              - haConfigMapStatus
              - haProxyServiceStatus
              - haProxyStatus
              - haSentinelStatus
              - haStatus
              type: object
            serviceStatus:
              description: Status of the Database Service created and managed by it
              properties:
                loadBalancer:
                  description: LoadBalancer contains the current status of the load-balancer,
                    if one is present.
                  properties:
                    ingress:
                      description: Ingress is a list containing ingress points for
                        the load-balancer. Traffic intended for the service should
                        be sent to these ingress points.
                      items:
                        description: 'LoadBalancerIngress represents the status of
                          a load-balancer ingress point: traffic intended for the
                          service should be sent to an ingress point.'
                        properties:
                          hostname:
                            description: Hostname is set for load-balancer ingress
                              points that are DNS based (typically AWS load-balancers)
                            type: string
                          ip:
                            description: IP is set for load-balancer ingress points
                              that are IP based (typically GCE or OpenStack load-balancers)
                            type: string
                        type: object
                      type: array
                  type: object
              type: object
          required:
          - actionStatus
          - databaseStatus
          - deploymentStatus
          - haStatus
          - serviceStatus
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
