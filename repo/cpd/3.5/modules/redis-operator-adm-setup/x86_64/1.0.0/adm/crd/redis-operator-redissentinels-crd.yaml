apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  # name must match the spec fields below, and be in the form: <plural>.<group>
  name: redissentinels.redis.databases.cloud.ibm.com
spec:
  # group name to use for REST API: /apis/<group>/<version>
  group: redis.databases.cloud.ibm.com
  # list of versions supported by this CustomResourceDefinition
  versions:
    - name: v1
      # Each version can be enabled/disabled by Served flag.
      served: true
      # One and only one version must be marked as the storage version.
      storage: true
  validation:
    openAPIV3Schema:
      type: object
      properties:
        spec:
          type: object
          properties:
            version:
              type: string
            license:
              type: object
              properties:
                accept:
                  type: boolean
                  enum:
                  - true
              required:
              - accept
            persistence:
              type: object
              properties:
                enabled:
                  type: boolean
                disk:
                  type: string
                storageClass:
                  type: string
            resources:
              properties:
                # DEPRECATED
                requests:
                  description: DEPRECATED. To set the requests for the member.db
                    container, please use spec.resources.member.db.requests.
                  type: object
                  properties:
                    cpu:
                      type: string
                    memory:
                      type: string
                limits:
                  description: DEPRECATED. To set the limits for the member.db
                    container, please use spec.resources.member.db.limits.
                  type: object
                  properties:
                    cpu:
                      type: string
                    memory:
                      type: string
                # END DEPRECATED
                member:
                  description: Per-container resources for the member pods
                  type: object
                  properties:
                    db:
                      type: object
                      properties:
                        requests:
                          type: object
                          properties:
                            cpu:
                              type: string
                            memory:
                              type: string
                        limits:
                          type: object
                          properties:
                            cpu:
                              type: string
                            memory:
                              type: string
                    proxy:
                      type: object
                      properties:
                        requests:
                          type: object
                          properties:
                            cpu:
                              type: string
                            memory:
                              type: string
                        limits:
                          type: object
                          properties:
                            cpu:
                              type: string
                            memory:
                              type: string
                    proxylog:
                      type: object
                      properties:
                        requests:
                          type: object
                          properties:
                            cpu:
                              type: string
                            memory:
                              type: string
                        limits:
                          type: object
                          properties:
                            cpu:
                              type: string
                            memory:
                              type: string
                    mgmt:
                      type: object
                      properties:
                        requests:
                          type: object
                          properties:
                            cpu:
                              type: string
                            memory:
                              type: string
                        limits:
                          type: object
                          properties:
                            cpu:
                              type: string
                            memory:
                              type: string
                sentinel:
                  description: Per-container resources for the sentinel pods
                  type: object
                  properties:
                    db:
                      type: object
                      properties:
                        requests:
                          type: object
                          properties:
                            cpu:
                              type: string
                            memory:
                              type: string
                        limits:
                          type: object
                          properties:
                            cpu:
                              type: string
                            memory:
                              type: string
                    proxy:
                      type: object
                      properties:
                        requests:
                          type: object
                          properties:
                            cpu:
                              type: string
                            memory:
                              type: string
                        limits:
                          type: object
                          properties:
                            cpu:
                              type: string
                            memory:
                              type: string
                    proxylog:
                      type: object
                      properties:
                        requests:
                          type: object
                          properties:
                            cpu:
                              type: string
                            memory:
                              type: string
                        limits:
                          type: object
                          properties:
                            cpu:
                              type: string
                            memory:
                              type: string
                    mgmt:
                      type: object
                      properties:
                        requests:
                          type: object
                          properties:
                            cpu:
                              type: string
                            memory:
                              type: string
                        limits:
                          type: object
                          properties:
                            cpu:
                              type: string
                            memory:
                              type: string
              type: object
            size:
              type: integer
            environment:
              type: object
              properties:
                adminPassword:
                  type: string
            members:
              properties:
                affinity:
                  description: Affinity is a group of affinity scheduling rules.
                  properties:
                    nodeAffinity:
                      description: Describes node affinity scheduling rules for
                        the pod.
                      properties:
                        preferredDuringSchedulingIgnoredDuringExecution:
                          description: The scheduler will prefer to schedule pods
                            to nodes that satisfy the affinity expressions specified
                            by this field, but it may choose a node that violates
                            one or more of the expressions. The node that is most
                            preferred is the one with the greatest sum of weights,
                            i.e. for each node that meets all of the scheduling
                            requirements (resource request, requiredDuringScheduling
                            affinity expressions, etc.), compute a sum by iterating
                            through the elements of this field and adding "weight"
                            to the sum if the node matches the corresponding matchExpressions;
                            the node(s) with the highest sum are the most preferred.
                          items:
                            description: An empty preferred scheduling term matches
                              all objects with implicit weight 0 (i.e. it's a no-op).
                              A null preferred scheduling term matches no objects
                              (i.e. is also a no-op).
                            properties:
                              preference:
                                description: A node selector term, associated with
                                  the corresponding weight.
                                properties:
                                  matchExpressions:
                                    description: A list of node selector requirements
                                      by node's labels.
                                    items:
                                      description: A node selector requirement is
                                        a selector that contains values, a key,
                                        and an operator that relates the key and
                                        values.
                                      properties:
                                        key:
                                          description: The label key that the selector
                                            applies to.
                                          type: string
                                        operator:
                                          description: Represents a key's relationship
                                            to a set of values. Valid operators
                                            are In, NotIn, Exists, DoesNotExist.
                                            Gt, and Lt.
                                          type: string
                                        values:
                                          description: An array of string values.
                                            If the operator is In or NotIn, the
                                            values array must be non-empty. If the
                                            operator is Exists or DoesNotExist,
                                            the values array must be empty. If the
                                            operator is Gt or Lt, the values array
                                            must have a single element, which will
                                            be interpreted as an integer. This array
                                            is replaced during a strategic merge
                                            patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                  matchFields:
                                    description: A list of node selector requirements
                                      by node's fields.
                                    items:
                                      description: A node selector requirement is
                                        a selector that contains values, a key,
                                        and an operator that relates the key and
                                        values.
                                      properties:
                                        key:
                                          description: The label key that the selector
                                            applies to.
                                          type: string
                                        operator:
                                          description: Represents a key's relationship
                                            to a set of values. Valid operators
                                            are In, NotIn, Exists, DoesNotExist.
                                            Gt, and Lt.
                                          type: string
                                        values:
                                          description: An array of string values.
                                            If the operator is In or NotIn, the
                                            values array must be non-empty. If the
                                            operator is Exists or DoesNotExist,
                                            the values array must be empty. If the
                                            operator is Gt or Lt, the values array
                                            must have a single element, which will
                                            be interpreted as an integer. This array
                                            is replaced during a strategic merge
                                            patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                type: object
                              weight:
                                description: Weight associated with matching the
                                  corresponding nodeSelectorTerm, in the range 1-100.
                                format: int32
                                type: integer
                            required:
                            - preference
                            - weight
                            type: object
                          type: array
                        requiredDuringSchedulingIgnoredDuringExecution:
                          description: If the affinity requirements specified by
                            this field are not met at scheduling time, the pod will
                            not be scheduled onto the node. If the affinity requirements
                            specified by this field cease to be met at some point
                            during pod execution (e.g. due to an update), the system
                            may or may not try to eventually evict the pod from
                            its node.
                          properties:
                            nodeSelectorTerms:
                              description: Required. A list of node selector terms.
                                The terms are ORed.
                              items:
                                description: A null or empty node selector term
                                  matches no objects. The requirements of them are
                                  ANDed. The TopologySelectorTerm type implements
                                  a subset of the NodeSelectorTerm.
                                properties:
                                  matchExpressions:
                                    description: A list of node selector requirements
                                      by node's labels.
                                    items:
                                      description: A node selector requirement is
                                        a selector that contains values, a key,
                                        and an operator that relates the key and
                                        values.
                                      properties:
                                        key:
                                          description: The label key that the selector
                                            applies to.
                                          type: string
                                        operator:
                                          description: Represents a key's relationship
                                            to a set of values. Valid operators
                                            are In, NotIn, Exists, DoesNotExist.
                                            Gt, and Lt.
                                          type: string
                                        values:
                                          description: An array of string values.
                                            If the operator is In or NotIn, the
                                            values array must be non-empty. If the
                                            operator is Exists or DoesNotExist,
                                            the values array must be empty. If the
                                            operator is Gt or Lt, the values array
                                            must have a single element, which will
                                            be interpreted as an integer. This array
                                            is replaced during a strategic merge
                                            patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                  matchFields:
                                    description: A list of node selector requirements
                                      by node's fields.
                                    items:
                                      description: A node selector requirement is
                                        a selector that contains values, a key,
                                        and an operator that relates the key and
                                        values.
                                      properties:
                                        key:
                                          description: The label key that the selector
                                            applies to.
                                          type: string
                                        operator:
                                          description: Represents a key's relationship
                                            to a set of values. Valid operators
                                            are In, NotIn, Exists, DoesNotExist.
                                            Gt, and Lt.
                                          type: string
                                        values:
                                          description: An array of string values.
                                            If the operator is In or NotIn, the
                                            values array must be non-empty. If the
                                            operator is Exists or DoesNotExist,
                                            the values array must be empty. If the
                                            operator is Gt or Lt, the values array
                                            must have a single element, which will
                                            be interpreted as an integer. This array
                                            is replaced during a strategic merge
                                            patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                type: object
                              type: array
                          required:
                          - nodeSelectorTerms
                          type: object
                      type: object
                    podAffinity:
                      description: Describes pod affinity scheduling rules (e.g.
                        co-locate this pod in the same node, zone, etc. as some
                        other pod(s)).
                      properties:
                        preferredDuringSchedulingIgnoredDuringExecution:
                          description: The scheduler will prefer to schedule pods
                            to nodes that satisfy the affinity expressions specified
                            by this field, but it may choose a node that violates
                            one or more of the expressions. The node that is most
                            preferred is the one with the greatest sum of weights,
                            i.e. for each node that meets all of the scheduling
                            requirements (resource request, requiredDuringScheduling
                            affinity expressions, etc.), compute a sum by iterating
                            through the elements of this field and adding "weight"
                            to the sum if the node has pods which matches the corresponding
                            podAffinityTerm; the node(s) with the highest sum are
                            the most preferred.
                          items:
                            description: The weights of all of the matched WeightedPodAffinityTerm
                              fields are added per-node to find the most preferred
                              node(s)
                            properties:
                              podAffinityTerm:
                                description: Required. A pod affinity term, associated
                                  with the corresponding weight.
                                properties:
                                  labelSelector:
                                    description: A label query over a set of resources,
                                      in this case pods.
                                    properties:
                                      matchExpressions:
                                        description: matchExpressions is a list
                                          of label selector requirements. The requirements
                                          are ANDed.
                                        items:
                                          description: A label selector requirement
                                            is a selector that contains values,
                                            a key, and an operator that relates
                                            the key and values.
                                          properties:
                                            key:
                                              description: key is the label key
                                                that the selector applies to.
                                              type: string
                                            operator:
                                              description: operator represents a
                                                key's relationship to a set of values.
                                                Valid operators are In, NotIn, Exists
                                                and DoesNotExist.
                                              type: string
                                            values:
                                              description: values is an array of
                                                string values. If the operator is
                                                In or NotIn, the values array must
                                                be non-empty. If the operator is
                                                Exists or DoesNotExist, the values
                                                array must be empty. This array
                                                is replaced during a strategic merge
                                                patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                          - key
                                          - operator
                                          type: object
                                        type: array
                                      matchLabels:
                                        additionalProperties:
                                          type: string
                                        description: matchLabels is a map of {key,value}
                                          pairs. A single {key,value} in the matchLabels
                                          map is equivalent to an element of matchExpressions,
                                          whose key field is "key", the operator
                                          is "In", and the values array contains
                                          only "value". The requirements are ANDed.
                                        type: object
                                    type: object
                                  namespaces:
                                    description: namespaces specifies which namespaces
                                      the labelSelector applies to (matches against);
                                      null or empty list means "this pod's namespace"
                                    items:
                                      type: string
                                    type: array
                                  topologyKey:
                                    description: This pod should be co-located (affinity)
                                      or not co-located (anti-affinity) with the
                                      pods matching the labelSelector in the specified
                                      namespaces, where co-located is defined as
                                      running on a node whose value of the label
                                      with key topologyKey matches that of any node
                                      on which any of the selected pods is running.
                                      Empty topologyKey is not allowed.
                                    type: string
                                required:
                                - topologyKey
                                type: object
                              weight:
                                description: weight associated with matching the
                                  corresponding podAffinityTerm, in the range 1-100.
                                format: int32
                                type: integer
                            required:
                            - podAffinityTerm
                            - weight
                            type: object
                          type: array
                        requiredDuringSchedulingIgnoredDuringExecution:
                          description: If the affinity requirements specified by
                            this field are not met at scheduling time, the pod will
                            not be scheduled onto the node. If the affinity requirements
                            specified by this field cease to be met at some point
                            during pod execution (e.g. due to a pod label update),
                            the system may or may not try to eventually evict the
                            pod from its node. When there are multiple elements,
                            the lists of nodes corresponding to each podAffinityTerm
                            are intersected, i.e. all terms must be satisfied.
                          items:
                            description: Defines a set of pods (namely those matching
                              the labelSelector relative to the given namespace(s))
                              that this pod should be co-located (affinity) or not
                              co-located (anti-affinity) with, where co-located
                              is defined as running on a node whose value of the
                              label with key <topologyKey> matches that of any node
                              on which a pod of the set of pods is running
                            properties:
                              labelSelector:
                                description: A label query over a set of resources,
                                  in this case pods.
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label
                                      selector requirements. The requirements are
                                      ANDed.
                                    items:
                                      description: A label selector requirement
                                        is a selector that contains values, a key,
                                        and an operator that relates the key and
                                        values.
                                      properties:
                                        key:
                                          description: key is the label key that
                                            the selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's
                                            relationship to a set of values. Valid
                                            operators are In, NotIn, Exists and
                                            DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string
                                            values. If the operator is In or NotIn,
                                            the values array must be non-empty.
                                            If the operator is Exists or DoesNotExist,
                                            the values array must be empty. This
                                            array is replaced during a strategic
                                            merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: matchLabels is a map of {key,value}
                                      pairs. A single {key,value} in the matchLabels
                                      map is equivalent to an element of matchExpressions,
                                      whose key field is "key", the operator is
                                      "In", and the values array contains only "value".
                                      The requirements are ANDed.
                                    type: object
                                type: object
                              namespaces:
                                description: namespaces specifies which namespaces
                                  the labelSelector applies to (matches against);
                                  null or empty list means "this pod's namespace"
                                items:
                                  type: string
                                type: array
                              topologyKey:
                                description: This pod should be co-located (affinity)
                                  or not co-located (anti-affinity) with the pods
                                  matching the labelSelector in the specified namespaces,
                                  where co-located is defined as running on a node
                                  whose value of the label with key topologyKey
                                  matches that of any node on which any of the selected
                                  pods is running. Empty topologyKey is not allowed.
                                type: string
                            required:
                            - topologyKey
                            type: object
                          type: array
                      type: object
                    podAntiAffinity:
                      description: Describes pod anti-affinity scheduling rules
                        (e.g. avoid putting this pod in the same node, zone, etc.
                        as some other pod(s)).
                      properties:
                        preferredDuringSchedulingIgnoredDuringExecution:
                          description: The scheduler will prefer to schedule pods
                            to nodes that satisfy the anti-affinity expressions
                            specified by this field, but it may choose a node that
                            violates one or more of the expressions. The node that
                            is most preferred is the one with the greatest sum of
                            weights, i.e. for each node that meets all of the scheduling
                            requirements (resource request, requiredDuringScheduling
                            anti-affinity expressions, etc.), compute a sum by iterating
                            through the elements of this field and adding "weight"
                            to the sum if the node has pods which matches the corresponding
                            podAffinityTerm; the node(s) with the highest sum are
                            the most preferred.
                          items:
                            description: The weights of all of the matched WeightedPodAffinityTerm
                              fields are added per-node to find the most preferred
                              node(s)
                            properties:
                              podAffinityTerm:
                                description: Required. A pod affinity term, associated
                                  with the corresponding weight.
                                properties:
                                  labelSelector:
                                    description: A label query over a set of resources,
                                      in this case pods.
                                    properties:
                                      matchExpressions:
                                        description: matchExpressions is a list
                                          of label selector requirements. The requirements
                                          are ANDed.
                                        items:
                                          description: A label selector requirement
                                            is a selector that contains values,
                                            a key, and an operator that relates
                                            the key and values.
                                          properties:
                                            key:
                                              description: key is the label key
                                                that the selector applies to.
                                              type: string
                                            operator:
                                              description: operator represents a
                                                key's relationship to a set of values.
                                                Valid operators are In, NotIn, Exists
                                                and DoesNotExist.
                                              type: string
                                            values:
                                              description: values is an array of
                                                string values. If the operator is
                                                In or NotIn, the values array must
                                                be non-empty. If the operator is
                                                Exists or DoesNotExist, the values
                                                array must be empty. This array
                                                is replaced during a strategic merge
                                                patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                          - key
                                          - operator
                                          type: object
                                        type: array
                                      matchLabels:
                                        additionalProperties:
                                          type: string
                                        description: matchLabels is a map of {key,value}
                                          pairs. A single {key,value} in the matchLabels
                                          map is equivalent to an element of matchExpressions,
                                          whose key field is "key", the operator
                                          is "In", and the values array contains
                                          only "value". The requirements are ANDed.
                                        type: object
                                    type: object
                                  namespaces:
                                    description: namespaces specifies which namespaces
                                      the labelSelector applies to (matches against);
                                      null or empty list means "this pod's namespace"
                                    items:
                                      type: string
                                    type: array
                                  topologyKey:
                                    description: This pod should be co-located (affinity)
                                      or not co-located (anti-affinity) with the
                                      pods matching the labelSelector in the specified
                                      namespaces, where co-located is defined as
                                      running on a node whose value of the label
                                      with key topologyKey matches that of any node
                                      on which any of the selected pods is running.
                                      Empty topologyKey is not allowed.
                                    type: string
                                required:
                                - topologyKey
                                type: object
                              weight:
                                description: weight associated with matching the
                                  corresponding podAffinityTerm, in the range 1-100.
                                format: int32
                                type: integer
                            required:
                            - podAffinityTerm
                            - weight
                            type: object
                          type: array
                        requiredDuringSchedulingIgnoredDuringExecution:
                          description: If the anti-affinity requirements specified
                            by this field are not met at scheduling time, the pod
                            will not be scheduled onto the node. If the anti-affinity
                            requirements specified by this field cease to be met
                            at some point during pod execution (e.g. due to a pod
                            label update), the system may or may not try to eventually
                            evict the pod from its node. When there are multiple
                            elements, the lists of nodes corresponding to each podAffinityTerm
                            are intersected, i.e. all terms must be satisfied.
                          items:
                            description: Defines a set of pods (namely those matching
                              the labelSelector relative to the given namespace(s))
                              that this pod should be co-located (affinity) or not
                              co-located (anti-affinity) with, where co-located
                              is defined as running on a node whose value of the
                              label with key <topologyKey> matches that of any node
                              on which a pod of the set of pods is running
                            properties:
                              labelSelector:
                                description: A label query over a set of resources,
                                  in this case pods.
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label
                                      selector requirements. The requirements are
                                      ANDed.
                                    items:
                                      description: A label selector requirement
                                        is a selector that contains values, a key,
                                        and an operator that relates the key and
                                        values.
                                      properties:
                                        key:
                                          description: key is the label key that
                                            the selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's
                                            relationship to a set of values. Valid
                                            operators are In, NotIn, Exists and
                                            DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string
                                            values. If the operator is In or NotIn,
                                            the values array must be non-empty.
                                            If the operator is Exists or DoesNotExist,
                                            the values array must be empty. This
                                            array is replaced during a strategic
                                            merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: matchLabels is a map of {key,value}
                                      pairs. A single {key,value} in the matchLabels
                                      map is equivalent to an element of matchExpressions,
                                      whose key field is "key", the operator is "In",
                                      and the values array contains only "value".
                                      The requirements are ANDed.
                                    type: object
                                type: object
                              namespaces:
                                description: namespaces specifies which namespaces
                                  the labelSelector applies to (matches against);
                                  null or empty list means "this pod's namespace"
                                items:
                                  type: string
                                type: array
                              topologyKey:
                                description: This pod should be co-located (affinity)
                                  or not co-located (anti-affinity) with the pods
                                  matching the labelSelector in the specified namespaces,
                                  where co-located is defined as running on a node
                                  whose value of the label with key topologyKey
                                  matches that of any node on which any of the selected
                                  pods is running. Empty topologyKey is not allowed.
                                type: string
                            required:
                            - topologyKey
                            type: object
                          type: array
                      type: object
                  type: object
                annotations:
                  additionalProperties:
                    type: string
                  type: object
                labels:
                  additionalProperties:
                    type: string
                  type: object
              type: object
          required:
          - license
        status:
          type: object
          properties:
            formationGeneration:
              type: integer
            observedGeneration:
              type: integer
            conditions:
              type: array
  subresources:
    status: {}
  additionalPrinterColumns:
  - JSONPath: .status.conditions[?(@.type=="Available")].type
    description: Condition type
    name: Type
    type: string
  - JSONPath: .status.conditions[?(@.type=="Available")].status
    description: Condition status
    name: Status
    type: string
  - JSONPath: .status.conditions[?(@.type=="Available")].reason
    description: Condition reason
    name: Reason
    type: string
  - JSONPath: .status.conditions[?(@.type=="Available")].message
    description: Condition message
    name: Message
    type: string
  # either Namespaced or Cluster
  scope: Namespaced
  names:
    # plural name to be used in the URL: /apis/<group>/<version>/<plural>
    plural: redissentinels
    # singular name to be used as an alias on the CLI and for display
    singular: redissentinel
    # kind is normally the CamelCased singular type. Your resource manifests use this.
    kind: RedisSentinel
    # shortNames allow shorter string to match your resource on the CLI
